<Window x:Class="TaskAssistant.AddTask"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TaskAssistant"
        xmlns:vm="clr-namespace:DBTaskAssistant;assembly=DBTaskAssistant"
        mc:Ignorable="d"
        Title="Add Task" Height="450" Width="800"
        MinHeight="450" MaxHeight="450" MinWidth="800" MaxWidth="800">
    <Window.DataContext >
        <vm:AddVM/>
    </Window.DataContext>
    <Window.Resources>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="5"
                  Background="#6bcdfd"
                  BorderBrush="White"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="AliceBlue" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="#699cfc"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="White"

                                BorderThickness="1"
                                BorderBrush="White"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="#8ab4fa"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="REd"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="Text">
            <Setter Property="Margin" Value="0 50 0 0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="TimeText" BasedOn="{StaticResource Text}">
            <Setter Property="Width" Value="50"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="#8ab4fa"/>
            <Setter Property="MaxLength" Value="30"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="20 5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="20">

                            <Grid>
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Margin="0"
                                    VerticalAlignment="Center"/>
                                <TextBlock
                                    x:Name="DefText"
                                    Text="{TemplateBinding Tag}"
                                    Padding="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="Gray"
                                    IsHitTestVisible="False"
                                    TextAlignment="{TemplateBinding TextAlignment}"
                                    Visibility="Collapsed"
                                    />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="DefText" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="RoundedGrad">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="BackBord" CornerRadius="30" BorderThickness="2" BorderBrush="White" >
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#699cfc" Offset="0" />
                                        <GradientStop Color="#6bcdfd" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="BackBord" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#8fb6ff" Offset="0" />
                                            <GradientStop Color="#91dbff" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="BackBord" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#bdd4ff" Offset="0" />
                                            <GradientStop Color="#bfeaff" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="Images\BackgroundLogin.jpg" Stretch="UniformToFill"/>
        </Grid.Background>
        <Border Grid.Row="0" Opacity="0.65" >
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#676cfb" Offset="0" />
                    <GradientStop Color="#6bcdfd" Offset="1" />
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        <StackPanel>
            <!--<TextBlock Text="Node" Foreground="White" FontSize="20" Margin="20 10 0 0"/>-->
            <TextBox x:Name="Node" 
                     Tag="Node" 
                     FontSize="25" 
                     Foreground="#699cfc" 
                     Margin="30 30" 
                     Padding="10 5"
                     MaxLength="50"/>
            <Grid Margin="60 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Calendar x:Name="Calend" 
                            Grid.Column="0" 
                          Background="White"
                            SelectedDate="{Binding date}"
                            IsTodayHighlighted="True"
                          Margin="10"/>

                <StackPanel Grid.Column="1" 
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <StackPanel >
                        <TextBlock Text="Hour" Style="{StaticResource TimeText}"/>
                        <ComboBox x:Name="HourBox"
                  ItemsSource="{Binding hours}"
                  SelectedValue="{Binding currHour}"/>
                    </StackPanel>
                    <StackPanel   >
                        <TextBlock Text="Minute" Style="{StaticResource TimeText}"/>
                        <ComboBox x:Name="MinuteBox"
                  ItemsSource="{Binding minutes}"
                  SelectedValue="{Binding currMinute}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="3" >
                    <TextBlock Text="Пріорітет" Style="{StaticResource Text}"/>
                    <ComboBox x:Name="PriorityBox"
                  ItemsSource="{Binding priorities}"
                  SelectedValue="{Binding priority}"/>
                </StackPanel>


            </Grid>
            <UniformGrid Columns="2" VerticalAlignment="Bottom" Margin="10 20">
                <Button Content="Скасувати"
                        Style="{StaticResource RoundedGrad}" Click="Button_Click"/>
                <Button Content="Зберегти"
                        Style="{StaticResource RoundedGrad}" Click="Button_Click_1"/>
            </UniformGrid>
        </StackPanel>
    </Grid>
</Window>